openapi: 3.0.0
info:
  title: Smart Restaurant API
  version: 1.0.0
  description: API documentation for Smart Restaurant backend
servers:
  - url: http://localhost:8000
paths:
  /auth/login:
    post:
      summary: User login
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: admin@example.com
                password:
                  type: string
                  example: 123456
              required:
                - username
                - password
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      email:
                        type: string
                      role:
                        type: string
        "401":
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid email or password
        "400":
          description: Bad request (missing or invalid input)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Missing email or password
        "403":
          description: Forbidden (user is blocked or not allowed)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User is blocked
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error
