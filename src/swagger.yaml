openapi: 3.0.0
info:
  title: Smart Resident API
  version: 1.0.0
  description: API documentation for Smart Resident backend
servers:
  - url: http://localhost:8000
paths:
  /user/feedback:
    post:
      summary: Create feedback (resident)
      tags:
        - Feedback
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                apartNumber:
                  type: string
                image:
                  type: string
                  format: binary
              required:
                - title
                - content
                - apartNumber
      responses:
        "201":
          description: Feedback created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Feedback created successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "500":
          description: Internal server error

  /user/list/feedbacks:
    get:
      summary: Get feedback list (admin/resident)
      tags:
        - Feedback
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: status
          schema:
            type: string
      responses:
        "200":
          description: List feedbacks
          content:
            application/json:
              schema:
                type: object
                properties:
                  feedBacks:
                    type: array
                    items:
                      type: object
                  total:
                    type: integer
                  page:
                    type: integer
                  limit:
                    type: integer
        "401":
          description: Unauthorized
        "500":
          description: Internal server error

  /user/feedback/{feedbackId}:
    put:
      summary: Update feedback by ID
      tags:
        - Feedback
      parameters:
        - in: path
          name: feedbackId
          required: true
          schema:
            type: string
          description: ID of feedback to update
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                status:
                  type: string
                image:
                  type: string
                  format: binary
      responses:
        "200":
          description: Feedback updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Feedback updated successfully
                  feedback:
                    type: object
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Feedback not found
        "500":
          description: Internal server error
    delete:
      summary: Delete feedback by ID
      tags:
        - Feedback
      parameters:
        - in: path
          name: feedbackId
          required: true
          schema:
            type: string
          description: ID of feedback to delete
      responses:
        "200":
          description: Feedback deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Feedback deleted successfully
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Feedback not found
        "500":
          description: Internal server error
  /user/login:
    post:
      summary: User login
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: admin
                password:
                  type: string
                  example: 12345
              required:
                - username
                - password
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      _id:
                        type: string
                      username:
                        type: string
                      email:
                        type: string
                      role:
                        type: string
        "401":
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid email or password
        "400":
          description: Bad request (missing or invalid input)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Missing email or password
        "403":
          description: Forbidden (user is blocked or not allowed)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User is blocked
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error
  /user/list-user:
    get:
      summary: Get all users (admin)
      tags:
        - User
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        "200":
          description: List users
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                  total:
                    type: integer
                  page:
                    type: integer
                  limit:
                    type: integer
        "401":
          description: Unauthorized
        "500":
          description: Internal server error
  /user/logout:
    post:
      summary: User logout
      tags:
        - Auth
      responses:
        "200":
          description: Logout successful
        "500":
          description: Internal server error

  /user/feedback:
    post:
      summary: Create feedback (resident)
      tags:
        - Feedback
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                image:
                  type: string
                  format: binary
              required:
                - title
                - content
      responses:
        "201":
          description: Feedback created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  feedback:
                    type: object
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "500":
          description: Internal server error

  /user/list/feedbacks:
    get:
      summary: Get feedback list (admin/resident)
      tags:
        - Feedback
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: status
          schema:
            type: string
      responses:
        "200":
          description: List feedbacks
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                  total:
                    type: integer
                  page:
                    type: integer
                  limit:
                    type: integer
        "401":
          description: Unauthorized
        "500":
          description: Internal server error

  /auth/refresh_token:
    post:
      summary: Refresh JWT token
      tags:
        - Auth
      responses:
        "200":
          description: Token refreshed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
        "403":
          description: Forbidden
        "500":
          description: Internal server error
